let nums = [1, 2, 3, 4, 5, 6, 7];

console.log(nums);

console.log("\nFor of...");
for (let n of nums) {
    console.log(n);
}

//for each method
//foreach is the function which gives the value one by one
console.log("\nFor each...");
nums.forEach((n) => {
    console.log(n ** 2);
})

// for each will take a value and you have to take that value to a function and perform a operation.

// the function which adds a number at the end of the each element of an name array
let name = ["sonu", "purushottam", "satwik", "himesh", "sandeep", "vivek", "takla", "elon"];

let n = 1;
name.forEach((a) => {
    console.log(n ** 3 + "." + a);
    n++;
});

// we can pass the value , index and the actual array in the forEach method
name.forEach((b, i, name) => {
    // some code
    // console.log(b,i,name);
    // some more code
})

// printing even numbers
let num = [1, 3425, 3, 32, 364, 46, 3245];

console.log("\neven numbers using forEach...");// the output of this is not an array
num.forEach(c => {
    if (c % 2 === 0)
        console.log(c);
});

//using filter keyword*********************
console.log("\nusing filter...");          
let evenArr = num.filter(x => x % 2 === 0);
// filter will return true or false        
console.log(evenArr);                      
console.log(evenArr[1]);                   

// printing using forEach for the array generated by the filter
console.log("\nprinting odd ones using forEach...");
num.filter(y => y %2 === 1)
    .forEach( z => {
        console.log(z);
    })

// map , "this is what i am looking for!!!!!!"

//*******it modifies the value in an array

let k = 1;
num.filter( f => f % 2 === 1)
    .map( f => f**2)
    .filter( f => f % 5 === 1)
    .forEach( f =>{
        console.log(k+"."+f);
        k++
    });

// forEach will be applicable when we have multiple values,
// but, reduce gives only one value

let result = num.filter( n => n % 2 === 1)
    .map( n => n**2)
    .filter( f => f % 5 === 1)
    .reduce((a,b) => a + b);

console.log(result);